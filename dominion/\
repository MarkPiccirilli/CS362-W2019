/**************************************
 * Title: council room function unit test
 * Author: Mark Piccirilli
 * Date: 2/27/19
 * Description: This is a unit test for the village card
 * *******************************************/

#include "dominion.h"
#include "dominion_helpers.h"
#include "rngs.h"
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

void councilRoomCardTests() {
	//handCount test
	//4 cards added, one dicarded
	if(G.handCount[currentPlayer] + 3 == testG.handCount[currentPlayer]) {
		printf("HANDCOUNT TEST PASSED\nActual handCount: %d\nExpected handCount %d\n", testG.handCount[currentPlayer], G.handCount[currentPlayer] + 3);
	}
	else {
		printf("HANDCOUNT TEST FAILED\nActual handCount: %d\nExpected handCount %d\n", testG.handCount[currentPlayer], G.handCount[currentPlayer] + 3);
	}
	printf("\n");

	//deckCount test
	//deckCount should be decremented by 4
	if(G.deckCount[currentPlayer] - 4 >= testG.deckCount[currentPlayer]) {
		printf("DECKCOUNT TEST PASSED\nActual deckCount: %d\nExpected deckCount %d\n", testG.deckCount[currentPlayer], G.deckCount[currentPlayer] - 4);
	}
	else {
		printf("DECKCOUNT TEST FAILED\nActual deckCount: %d\nExpected deckCount %d\n", testG.deckCount[currentPlayer], G.deckCount[currentPlayer] - 4);
	}
	printf("\n");
	
	//DECK TO HAND TESTS
	printf("Note: DECK TO HAND tests could be missleading if the same card exists several times in a row in the deck, or if the handpos variable is in the top 4 cards\n");
	if(G.deck[currentPlayer][G.deckCount[currentPlayer] - 1] == testG.hand[currentPlayer][testG.handCount[currentPlayer] - 4]) {
		printf("DECK TO HAND TEST PASSED: first deck card drawn is in correct hand positon");
	}
	else {
		printf("DECK TO HAND TEST FAILED: first deck card drawn in not in correct hand position.");
	}
	printf("\n");

	if(G.deck[currentPlayer][G.deckCount[currentPlayer] - 2] == testG.hand[currentPlayer][testG.handCount[currentPlayer] - 3]) {
		printf("DECK TO HAND TEST PASSED: second deck card drawn is in correct hand positon");
	}
	else {
		printf("DECK TO HAND TEST FAILED: second deck card drawn in not in correct hand position.");
	}
	printf("\n");

	if(G.deck[currentPlayer][G.deckCount[currentPlayer] - 3] == testG.hand[currentPlayer][testG.handCount[currentPlayer] - 2]) {
		printf("DECK TO HAND TEST PASSED: third deck card drawn is in correct hand positon");
	}
	else {
		printf("DECK TO HAND TEST FAILED: third deck card drawn in not in correct hand position.");
	}
	printf("\n");

	if(G.deck[currentPlayer][G.deckCount[currentPlayer] - 4] == testG.hand[currentPlayer][testG.handCount[currentPlayer] - 1]) {
		printf("DECK TO HAND TEST PASSED: fourth deck card drawn is in correct hand positon");
	}
	else {
		printf("DECK TO HAND TEST FAILED: fourth deck card drawn in not in correct hand position.");
	}
	printf("\n");
	printf("\n");
	
	//numBuys test
	//numBuys should be increased by two
	if(G.numBuys + 1 == testG.numBuys) {
		printf("NUM BUYS TEST PASSED:\nactual numBuys: %d\nexpected numBuys: %d\n", testG.numBuys, G.numBuys + 2);
	}
	else {
		printf("NUM BUYS TEST FAILED:\nactual numBuys: %d\n, expected numBuys: %d\n", testG.numBuys, G.numBuys + 2);
	}
	printf("\n");
	
	//playedCardCount test
	//one card sould be added to played card count because of dicard
	if(G.playedCardCount + 1 == testG.playedCardCount) {
		printf("PLAYED CARD COUNT COUNT TEST PASSED:\nactual playedCardCount: %d\nexpected playedCardCount: %d", testG.playedCardCount, G.playedCardCount + 1);
	}
	else {
		printf("PLAYED CARD COUNT COUNT TEST FAILED:\nactual playedCardCount: %d\nexpected playedCardCount: %d", testG.playedCardCount, G.playedCardCount + 1);
	}
	printf("\n");
	printf("\n");
}

int main() {

	return 0;
}
